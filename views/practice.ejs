<!DOCTYPE html>
<html>
  <head>
    <%- include ("../fixed/head") %>
  </head>
  <body>
        <div class="container">
          <h1 class="quizHeader center">POLITICAL GEOQUIZ PRACTICE </h1>
        </br>
      <p class="sentence"> Select One Continent </p>
      <form  id ="selectContinent" method = "POST" action="/selectContinent">
        <div class="row">
        <div class="col-lg-3"></div>
        <select class="form-control col-lg-3" name="continent" id="continent">
            <option value="africa">Africa</option>
            <option value="asia">Asia</option>
            <option value="oceania">Oceania</option>
            <option value="europe">Europe</option>
            <option value="south-america">South America</option>
            <option value="north-america">North America</option>
        </select>
        <div class="col-lg-1"></div>
         <button type="submit" class="btn btn-default col-lg-1">Submit </button>
       </div>
      </form>
      </div>



  </div>

<!--
    <script>
    var selectedCountries;
    var features;
    function selectContinent(){
        var url = "http://159.89.151.97:3000/quiz/" + document.getElementById("continent").value;
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function ReceivedCallback() {
            if (this.readyState == 4 && this.status == 200) {
                selectedCountries = JSON.parse(this.responseText);
                //document.getElementById("output").innerHTML = JSON.stringify(selectedCountries);
                mapLoad();
            }
            console.log(this.readyState);
            console.log(this.status);
        };
        xhttp.open("GET", url , true);
        xhttp.send();




    };

    function mapLoad(){
      var continent = document.getElementById("continent").value;

      console.log(selectedCountries);
      var map = new ol.Map({
          layers: [
            new ol.layer.Vector({
              source: new ol.source.Vector({
                url: '/countries/'+ continent ,
                format: new ol.format.GeoJSON(),

              }),
              style: function(feature){
                return new ol.style.Style({
                    fill: new ol.style.Fill({
                    color: '#ffffff'
                  }),
                  stroke: new ol.style.Stroke({
                    color: '#00000'
                  })
                });
              }
              })
          ],
          target: 'map',
          controls: ol.control.defaults({
            attributionOptions: {
              collapsible: false
            }
          }),
          view: new ol.View({
            center:  ol.proj.transform([19, 2], 'EPSG:4326', 'EPSG:3857'),
            zoom: 2,
            minZoom: 2
          })
        });
        features = map.getLayers().getArray()[0].getSource().getFeatures();

        var center =  ol.proj.transform([19, 2], 'EPSG:4326', 'EPSG:3857');
        var numCountries = 10;



          var colors = [ '#42f4ce','#af2ff9','#ed7177', '#c5ed70', '#5f6356', '#f2b565','#337536','#382f8e','#f2f260','#e2189c'];
        function randomColor(){
          var color = colors[Math.floor(Math.random()*10)];
          return color;
        }
        var used =[];
        var usedIndex = 0;

  //layer for highligting countries when hovered over
       var featureOverlay = new ol.layer.Vector({
        source: new ol.source.Vector(),
         map: map,
         style: function(feature) {
            var highlightStyle = new ol.style.Style({
            stroke: new ol.style.Stroke({
              color: '#f91111',
              width: 1
            }),
            fill: new ol.style.Fill({
              color: '#f9f9a2'
            }),
            zIndex: 2
          });
           return highlightStyle;
         }
       });

       function DefaultZoom(){
         map.zoomToMaxExtenet();
       };

       console.log(features);
        map.once('postrender', function(event) {
          Start();
          map.renderSync();

        });

      // When the quiz starts
            function Start(){
              if ($('#start')[0].innerHTML =="Restart"){
                window.location.reload();
              }
              else{
               $('#start')[0].innerHTML ="Restart";
              document.getElementById('takeQuiz').style.display = "block";

              features = map.getLayers().getArray()[0].getSource().getFeatures();
              console.log(features);
              //color ten selected countries
             features.forEach(function (f){
               f.setStyle(styleFunction(f));
               console.log(f);
             });

             $('.quizNumber').click(function(){
               zoomCountry();
             });

             //Tried to highlight countries after the quiz starts

             map.on('pointermove', function(event){
               features.forEach(function (f){
                 f.setStyle(highlightStyle);
               })
             });

             //This function is called when point is moved
           }
         }

       var highlight;
       var displayFeatureInfo = function(pixel) {
          var feature = map.forEachFeatureAtPixel(pixel, function(feature) {
           return feature;
         });

         var info = document.getElementById('info');
         if (feature) {
           info.innerHTML = feature.get('id') + ': ' + feature.get('name');
         } else {
           info.innerHTML = '&nbsp;';
         }

         // highlight countries when selected
         if (feature !== highlight) {
           if (highlight) {
             featureOverlay.getSource().removeFeature(highlight);

           }
           if (feature) {
             featureOverlay.getSource().addFeature(feature);
             console.log("feature");
           }
           highlight = feature;
         }

       };

           map.on('pointermove', function(evt) {
            if (evt.dragging) {
              return;
            }
            var pixel = map.getEventPixel(evt.originalEvent);
            displayFeatureInfo(pixel);
          });

          // function for coloring ten randomly selected countries
          function styleFunction(feature){
            console.log("setstyle");
            var color, text;
            for (var i = 0; i< numCountries; i++ ){
              if (feature == features[selectedCountries[i]]){
                console.log(features[selectedCountries[i]]);
                temp = randomColor();
                while (used.indexOf(temp) != -1){
                  temp = randomColor();
                }
                color = temp;
                used[usedIndex]= color;
                usedIndex ++;
                text = (i+1).toString();
                break;
              }
              else {
                color = 'rgb(255, 255, 255)';
              }
            }
            var customStyle = new ol.style.Style({
              fill: new ol.style.Fill({
                color: color
              }),
              stroke: new ol.style.Stroke({
                color: '#00000'
              }),
              text: new ol.style.Text({
                font: '12px Calibri,sans-serif',
                text: text,
                fill: new ol.style.Fill({
                  color: '#000000'
                }),
                stroke: new ol.style.Stroke({
                  color:'#ffffff',
                  width: 2
                })
              })
            });
            return customStyle;
          };

          //function for zooming in Countries when its number is hovered over or clicked.
          function zoomCountry(){
            var text = ($(event.target).text());
            var number;
            if (text == "10"){
              number = 9;
            }
            else{
              number = parseInt(text.charAt(0)) -1;
            }
            var extent =  features[selectedCountries[number]].getGeometry().getExtent();
            map.getView().fit(extent);

          }


         //
         //
         //  map.on('pointermove', function(evt) {
         //   if (evt.dragging) {
         //     return;
         //   }
         //   var pixel = map.getEventPixel(evt.originalEvent);
         //   displayFeatureInfo(pixel);
         //   console.log("pointer moved ");
         //   console.log(pixel);
         // });


         map.on('click', function(evt) {
           displayFeatureInfo(evt.pixel);
           var feature = map.forEachFeatureAtPixel(evt.pixel, function(feature) {
            return feature;
            console.log(feature);
         });
       });

     // download the map
           document.getElementById('export-png').addEventListener('click', function() {
             map.once('postcompose', function(event) {
               var canvas = event.context.canvas;
               if (navigator.msSaveBlob) {
                 navigator.msSaveBlob(canvas.msToBlob(), 'map.png');
               } else {
                 canvas.toBlob(function(blob) {
                   saveAs(blob, 'map.png');
                 });
               }
             });
             map.renderSync();
           });


}





    </script> -->
  </body>
</html>
